# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T14:05:32+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, ConfigDict, Field, RootModel, conint, constr


class AssociateResourceResponse(BaseModel):
    pass


class BadRequestException(RootModel[Any]):
    root: Any


class BaseScreenshotConfigIgnoreCoordinate(
    RootModel[constr(pattern=r'^(-?\d{1,5}\.?\d{0,2},){3}(-?\d{1,5}\.?\d{0,2}){1}$')]
):
    root: constr(pattern=r'^(-?\d{1,5}\.?\d{0,2},){3}(-?\d{1,5}\.?\d{0,2}){1}$')


class BaseScreenshotIgnoreCoordinates(
    RootModel[List[BaseScreenshotConfigIgnoreCoordinate]]
):
    root: List[BaseScreenshotConfigIgnoreCoordinate] = Field(
        ..., max_length=20, min_length=0
    )


class Blob(RootModel[constr(min_length=1, max_length=10000000)]):
    root: constr(min_length=1, max_length=10000000)


class CanaryArn(
    RootModel[
        constr(
            pattern=r'arn:(aws[a-zA-Z-]*)?:synthetics:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:canary:[0-9a-z_\-]{1,21}',
            min_length=1,
            max_length=2048,
        )
    ]
):
    root: constr(
        pattern=r'arn:(aws[a-zA-Z-]*)?:synthetics:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:canary:[0-9a-z_\-]{1,21}',
        min_length=1,
        max_length=2048,
    )


class CanaryName(
    RootModel[constr(pattern=r'^[0-9a-z_\-]+$', min_length=1, max_length=21)]
):
    root: constr(pattern=r'^[0-9a-z_\-]+$', min_length=1, max_length=21)


class CanaryRunState(Enum):
    RUNNING = 'RUNNING'
    PASSED = 'PASSED'
    FAILED = 'FAILED'


class CanaryRunStateReasonCode(Enum):
    CANARY_FAILURE = 'CANARY_FAILURE'
    EXECUTION_FAILURE = 'EXECUTION_FAILURE'


class CanaryState(Enum):
    CREATING = 'CREATING'
    READY = 'READY'
    STARTING = 'STARTING'
    RUNNING = 'RUNNING'
    UPDATING = 'UPDATING'
    STOPPING = 'STOPPING'
    STOPPED = 'STOPPED'
    ERROR = 'ERROR'
    DELETING = 'DELETING'


class CanaryStateReasonCode(Enum):
    INVALID_PERMISSIONS = 'INVALID_PERMISSIONS'
    CREATE_PENDING = 'CREATE_PENDING'
    CREATE_IN_PROGRESS = 'CREATE_IN_PROGRESS'
    CREATE_FAILED = 'CREATE_FAILED'
    UPDATE_PENDING = 'UPDATE_PENDING'
    UPDATE_IN_PROGRESS = 'UPDATE_IN_PROGRESS'
    UPDATE_COMPLETE = 'UPDATE_COMPLETE'
    ROLLBACK_COMPLETE = 'ROLLBACK_COMPLETE'
    ROLLBACK_FAILED = 'ROLLBACK_FAILED'
    DELETE_IN_PROGRESS = 'DELETE_IN_PROGRESS'
    DELETE_FAILED = 'DELETE_FAILED'
    SYNC_DELETE_IN_PROGRESS = 'SYNC_DELETE_IN_PROGRESS'


class CodeHandler(
    RootModel[
        constr(
            pattern=r'^([0-9a-zA-Z_-]+\/)*[0-9A-Za-z_\\-]+\.[A-Za-z_][A-Za-z0-9_]*$',
            min_length=1,
            max_length=128,
        )
    ]
):
    root: constr(
        pattern=r'^([0-9a-zA-Z_-]+\/)*[0-9A-Za-z_\\-]+\.[A-Za-z_][A-Za-z0-9_]*$',
        min_length=1,
        max_length=128,
    )


class ConflictException(RootModel[Any]):
    root: Any


class DeleteCanaryRequest(BaseModel):
    pass


class DeleteCanaryResponse(BaseModel):
    pass


class DeleteGroupRequest(BaseModel):
    pass


class DeleteGroupResponse(BaseModel):
    pass


class DescribeCanariesLastRunNameFilter(RootModel[List[CanaryName]]):
    root: List[CanaryName] = Field(..., max_length=5, min_length=1)


class DescribeCanariesNameFilter(RootModel[List[CanaryName]]):
    root: List[CanaryName] = Field(..., max_length=5, min_length=1)


class DisassociateResourceRequest(BaseModel):
    ResourceArn: CanaryArn


class DisassociateResourceResponse(BaseModel):
    pass


class EncryptionMode(Enum):
    SSE_S3 = 'SSE_S3'
    SSE_KMS = 'SSE_KMS'


class EnvironmentVariableName(RootModel[constr(pattern=r'[a-zA-Z]([a-zA-Z0-9_])+')]):
    root: constr(pattern=r'[a-zA-Z]([a-zA-Z0-9_])+')


class EnvironmentVariableValue(RootModel[str]):
    root: str


class EnvironmentVariablesMap(RootModel[Optional[Dict[str, EnvironmentVariableValue]]]):
    root: Optional[Dict[str, EnvironmentVariableValue]] = None


class FunctionArn(
    RootModel[
        constr(
            pattern=r'arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(:(\$LATEST|[a-zA-Z0-9-_]+))?',
            min_length=1,
            max_length=2048,
        )
    ]
):
    root: constr(
        pattern=r'arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_]+(:(\$LATEST|[a-zA-Z0-9-_]+))?',
        min_length=1,
        max_length=2048,
    )


class GetCanaryRequest(BaseModel):
    pass


class GetGroupRequest(BaseModel):
    pass


class GroupArn(
    RootModel[
        constr(
            pattern=r'arn:(aws[a-zA-Z-]*)?:synthetics:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:group:[0-9a-z]+',
            min_length=1,
            max_length=128,
        )
    ]
):
    root: constr(
        pattern=r'arn:(aws[a-zA-Z-]*)?:synthetics:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:group:[0-9a-z]+',
        min_length=1,
        max_length=128,
    )


class GroupIdentifier(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class GroupName(RootModel[constr(min_length=1, max_length=64)]):
    root: constr(min_length=1, max_length=64)


class InternalFailureException(RootModel[Any]):
    root: Any


class InternalServerException(RootModel[Any]):
    root: Any


class KmsKeyArn(
    RootModel[
        constr(
            pattern=r'arn:(aws[a-zA-Z-]*)?:kms:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:key/[\w\-\/]+',
            min_length=1,
            max_length=2048,
        )
    ]
):
    root: constr(
        pattern=r'arn:(aws[a-zA-Z-]*)?:kms:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:key/[\w\-\/]+',
        min_length=1,
        max_length=2048,
    )


class ListTagsForResourceRequest(BaseModel):
    pass


class MaxCanaryResults(RootModel[conint(ge=1, le=20)]):
    root: conint(ge=1, le=20)


class MaxFifteenMinutesInSeconds(RootModel[conint(ge=3, le=840)]):
    root: conint(ge=3, le=840)


class MaxGroupResults(RootModel[conint(ge=1, le=20)]):
    root: conint(ge=1, le=20)


class MaxOneYearInSeconds(RootModel[conint(ge=0, le=31622400)]):
    root: conint(ge=0, le=31622400)


class MaxSize100(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class MaxSize1024(RootModel[conint(ge=1, le=1024)]):
    root: conint(ge=1, le=1024)


class MaxSize3008(RootModel[conint(ge=960, le=3008)]):
    root: conint(ge=960, le=3008)


class NotFoundException(RootModel[Any]):
    root: Any


class NullableBoolean(RootModel[bool]):
    root: bool


class PaginationToken(RootModel[constr(pattern=r'^.+$', min_length=1, max_length=512)]):
    root: constr(pattern=r'^.+$', min_length=1, max_length=512)


class RequestEntityTooLargeException(RootModel[Any]):
    root: Any


class ResourceArn(
    RootModel[
        constr(
            pattern=r'arn:(aws[a-zA-Z-]*)?:synthetics:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:(canary|group):[0-9a-z_\-]+',
            min_length=1,
            max_length=2048,
        )
    ]
):
    root: constr(
        pattern=r'arn:(aws[a-zA-Z-]*)?:synthetics:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:(canary|group):[0-9a-z_\-]+',
        min_length=1,
        max_length=2048,
    )


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class RoleArn(
    RootModel[
        constr(
            pattern=r'arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+',
            min_length=1,
            max_length=2048,
        )
    ]
):
    root: constr(
        pattern=r'arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+',
        min_length=1,
        max_length=2048,
    )


class S3EncryptionConfig(BaseModel):
    EncryptionMode_1: Optional[EncryptionMode] = Field(None, alias='EncryptionMode')
    KmsKeyArn_1: Optional[KmsKeyArn] = Field(None, alias='KmsKeyArn')


class SecurityGroupId(RootModel[str]):
    root: str


class SecurityGroupIds(RootModel[List[SecurityGroupId]]):
    root: List[SecurityGroupId] = Field(..., max_length=5, min_length=0)


class ServiceQuotaExceededException(RootModel[Any]):
    root: Any


class StartCanaryRequest(BaseModel):
    pass


class StartCanaryResponse(BaseModel):
    pass


class StopCanaryRequest(BaseModel):
    pass


class StopCanaryResponse(BaseModel):
    pass


class String(RootModel[constr(min_length=1, max_length=1024)]):
    root: constr(min_length=1, max_length=1024)


class StringList(RootModel[List[String]]):
    root: List[String]


class SubnetId(RootModel[str]):
    root: str


class SubnetIds(RootModel[List[SubnetId]]):
    root: List[SubnetId] = Field(..., max_length=16, min_length=0)


class TagKey(
    RootModel[
        constr(pattern=r'^(?!aws:)[a-zA-Z+-=._:/]+$', min_length=1, max_length=128)
    ]
):
    model_config = ConfigDict(
        regex_engine="python-re",
    )
    root: constr(pattern=r'^(?!aws:)[a-zA-Z+-=._:/]+$', min_length=1, max_length=128)


class TagKeyList(RootModel[List[TagKey]]):
    root: List[TagKey] = Field(..., max_length=50, min_length=1)


class TagResourceResponse(BaseModel):
    pass


class TagValue(RootModel[constr(max_length=256)]):
    root: constr(max_length=256)


class Timestamp(RootModel[datetime]):
    root: datetime


class Token(RootModel[constr(min_length=4, max_length=252)]):
    root: constr(min_length=4, max_length=252)


class TooManyRequestsException(RootModel[Any]):
    root: Any


class UUID(
    RootModel[
        constr(
            pattern=r'^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
        )
    ]
):
    root: constr(
        pattern=r'^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    )


class UntagResourceRequest(BaseModel):
    pass


class UntagResourceResponse(BaseModel):
    pass


class UpdateCanaryResponse(BaseModel):
    pass


class ValidationException(RootModel[Any]):
    root: Any


class VpcConfigInput(BaseModel):
    SecurityGroupIds_1: Optional[SecurityGroupIds] = Field(
        None, alias='SecurityGroupIds'
    )
    SubnetIds_1: Optional[SubnetIds] = Field(None, alias='SubnetIds')


class VpcId(RootModel[str]):
    root: str


class Boolean(RootModel[bool]):
    root: bool


class CanariesPostRequest(BaseModel):
    MaxResults: Optional[conint(ge=1, le=20)] = Field(
        None,
        description='Specify this parameter to limit how many canaries are returned each time you use the <code>DescribeCanaries</code> operation. If you omit this parameter, the default of 100 is used.',
    )
    Names: Optional[List[CanaryName]] = Field(
        None,
        description='<p>Use this parameter to return only canaries that match the names that you specify here. You can specify as many as five canary names.</p> <p>If you specify this parameter, the operation is successful only if you have authorization to view all the canaries that you specify in your request. If you do not have permission to view any of the canaries, the request fails with a 403 response.</p> <p>You are required to use this parameter if you are logged on to a user or role that has an IAM policy that restricts which canaries that you are allowed to view. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Restricted.html"> Limiting a user to viewing specific canaries</a>.</p>',
        max_length=5,
        min_length=1,
    )
    NextToken: Optional[constr(min_length=4, max_length=252)] = Field(
        None,
        description='A token that indicates that there is more data available. You can use this token in a subsequent operation to retrieve the next set of results.',
    )


class CanariesLastRunPostRequest(BaseModel):
    MaxResults: Optional[conint(ge=1, le=100)] = Field(
        None,
        description='Specify this parameter to limit how many runs are returned each time you use the <code>DescribeLastRun</code> operation. If you omit this parameter, the default of 100 is used.',
    )
    Names: Optional[List[CanaryName]] = Field(
        None,
        description='<p>Use this parameter to return only canaries that match the names that you specify here. You can specify as many as five canary names.</p> <p>If you specify this parameter, the operation is successful only if you have authorization to view all the canaries that you specify in your request. If you do not have permission to view any of the canaries, the request fails with a 403 response.</p> <p>You are required to use the <code>Names</code> parameter if you are logged on to a user or role that has an IAM policy that restricts which canaries that you are allowed to view. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Restricted.html"> Limiting a user to viewing specific canaries</a>.</p>',
        max_length=5,
        min_length=1,
    )
    NextToken: Optional[constr(min_length=4, max_length=252)] = Field(
        None,
        description='A token that indicates that there is more data available. You can use this token in a subsequent <code>DescribeCanariesLastRun</code> operation to retrieve the next set of results.',
    )


class ArtifactConfig(BaseModel):
    S3Encryption: Optional[S3EncryptionConfig] = None


class Code(BaseModel):
    Handler: Optional[CodeHandler] = None
    S3Bucket: Optional[String] = None
    S3Key: Optional[String] = None
    S3Version: Optional[String] = None
    ZipFile: Optional[Blob] = None


class RunConfig(BaseModel):
    ActiveTracing: Optional[NullableBoolean] = None
    EnvironmentVariables: Optional[EnvironmentVariablesMap] = None
    MemoryInMB: Optional[MaxSize3008] = None
    TimeoutInSeconds: Optional[MaxFifteenMinutesInSeconds] = None


class Schedule(BaseModel):
    DurationInSeconds: Optional[MaxOneYearInSeconds] = None
    Expression: Optional[String] = None


class VpcConfig(BaseModel):
    SecurityGroupIds_1: Optional[SecurityGroupIds] = Field(
        None, alias='SecurityGroupIds'
    )
    SubnetIds_1: Optional[SubnetIds] = Field(None, alias='SubnetIds')


class CanaryPostRequest(BaseModel):
    ArtifactConfig_1: Optional[ArtifactConfig] = Field(
        None,
        alias='ArtifactConfig',
        description='A structure that contains the configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3.',
    )
    ArtifactS3Location: constr(min_length=1, max_length=1024) = Field(
        ...,
        description="The location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary. Artifacts include the log file, screenshots, and HAR files. The name of the S3 bucket can't include a period (.).",
    )
    Code_1: Code = Field(
        ...,
        alias='Code',
        description='Use this structure to input your script code for the canary. This structure contains the Lambda handler with the location where the canary should start running the script. If the script is stored in an S3 bucket, the bucket name, key, and version are also included. If the script was passed into the canary directly, the script code is contained in the value of <code>Zipfile</code>. ',
    )
    ExecutionRoleArn: constr(
        pattern=r'arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+',
        min_length=1,
        max_length=2048,
    ) = Field(
        ...,
        description='<p>The ARN of the IAM role to be used to run the canary. This role must already exist, and must include <code>lambda.amazonaws.com</code> as a principal in the trust policy. The role must also have the following permissions:</p> <ul> <li> <p> <code>s3:PutObject</code> </p> </li> <li> <p> <code>s3:GetBucketLocation</code> </p> </li> <li> <p> <code>s3:ListAllMyBuckets</code> </p> </li> <li> <p> <code>cloudwatch:PutMetricData</code> </p> </li> <li> <p> <code>logs:CreateLogGroup</code> </p> </li> <li> <p> <code>logs:CreateLogStream</code> </p> </li> <li> <p> <code>logs:PutLogEvents</code> </p> </li> </ul>',
    )
    FailureRetentionPeriodInDays: Optional[conint(ge=1, le=1024)] = Field(
        None,
        description='The number of days to retain data about failed runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.',
    )
    Name: constr(pattern=r'^[0-9a-z_\-]+$', min_length=1, max_length=21) = Field(
        ...,
        description='<p>The name for this canary. Be sure to give it a descriptive name that distinguishes it from other canaries in your account.</p> <p>Do not include secrets or proprietary information in your canary names. The canary name makes up part of the canary ARN, and the ARN is included in outbound calls over the internet. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/servicelens_canaries_security.html">Security Considerations for Synthetics Canaries</a>.</p>',
    )
    RunConfig_1: Optional[RunConfig] = Field(
        None,
        alias='RunConfig',
        description='A structure that contains input information for a canary run.',
    )
    RuntimeVersion: constr(min_length=1, max_length=1024) = Field(
        ...,
        description='Specifies the runtime version to use for the canary. For a list of valid runtime versions and more information about runtime versions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html"> Canary Runtime Versions</a>.',
    )
    Schedule_1: Schedule = Field(
        ...,
        alias='Schedule',
        description='This structure specifies how often a canary is to make runs and the date and time when it should stop making runs.',
    )
    SuccessRetentionPeriodInDays: Optional[conint(ge=1, le=1024)] = Field(
        None,
        description='The number of days to retain data about successful runs of this canary. If you omit this field, the default of 31 days is used. The valid range is 1 to 455 days.',
    )
    Tags: Optional[Dict[str, TagValue]] = Field(
        None,
        description='<p>A list of key-value pairs to associate with the canary. You can associate as many as 50 tags with a canary.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only the resources that have certain tag values.</p>',
    )
    VpcConfig_1: Optional[VpcConfig] = Field(
        None,
        alias='VpcConfig',
        description='If this canary is to test an endpoint in a VPC, this structure contains information about the subnets and security groups of the VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html"> Running a Canary in a VPC</a>.',
    )


class CanaryNameRunsPostRequest(BaseModel):
    MaxResults: Optional[conint(ge=1, le=100)] = Field(
        None,
        description='Specify this parameter to limit how many runs are returned each time you use the <code>GetCanaryRuns</code> operation. If you omit this parameter, the default of 100 is used.',
    )
    NextToken: Optional[constr(min_length=4, max_length=252)] = Field(
        None,
        description='A token that indicates that there is more data available. You can use this token in a subsequent <code>GetCanaryRuns</code> operation to retrieve the next set of results.',
    )


class GroupPostRequest(BaseModel):
    Name: constr(min_length=1, max_length=64) = Field(
        ...,
        description='<p>The name for the group. It can include any Unicode characters.</p> <p>The names for all groups in your account, across all Regions, must be unique.</p>',
    )
    Tags: Optional[Dict[str, TagValue]] = Field(
        None,
        description='<p>A list of key-value pairs to associate with the group. You can associate as many as 50 tags with a group.</p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only the resources that have certain tag values.</p>',
    )


class GroupGroupIdentifierAssociatePatchRequest(BaseModel):
    ResourceArn: constr(
        pattern=r'arn:(aws[a-zA-Z-]*)?:synthetics:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:canary:[0-9a-z_\-]{1,21}',
        min_length=1,
        max_length=2048,
    ) = Field(
        ...,
        description='The ARN of the canary that you want to associate with the specified group.',
    )


class GroupGroupIdentifierDisassociatePatchRequest(BaseModel):
    ResourceArn: constr(
        pattern=r'arn:(aws[a-zA-Z-]*)?:synthetics:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:canary:[0-9a-z_\-]{1,21}',
        min_length=1,
        max_length=2048,
    ) = Field(
        ...,
        description='The ARN of the canary that you want to remove from the specified group.',
    )


class GroupGroupIdentifierResourcesPostRequest(BaseModel):
    MaxResults: Optional[conint(ge=1, le=20)] = Field(
        None,
        description='Specify this parameter to limit how many canary ARNs are returned each time you use the <code>ListGroupResources</code> operation. If you omit this parameter, the default of 20 is used.',
    )
    NextToken: Optional[constr(pattern=r'^.+$', min_length=1, max_length=512)] = Field(
        None,
        description='A token that indicates that there is more data available. You can use this token in a subsequent operation to retrieve the next set of results.',
    )


class GroupsPostRequest(BaseModel):
    MaxResults: Optional[conint(ge=1, le=20)] = Field(
        None,
        description='Specify this parameter to limit how many groups are returned each time you use the <code>ListGroups</code> operation. If you omit this parameter, the default of 20 is used.',
    )
    NextToken: Optional[constr(pattern=r'^.+$', min_length=1, max_length=512)] = Field(
        None,
        description='A token that indicates that there is more data available. You can use this token in a subsequent operation to retrieve the next set of results.',
    )


class ResourceResourceArnGroupsPostRequest(BaseModel):
    MaxResults: Optional[conint(ge=1, le=20)] = Field(
        None,
        description='Specify this parameter to limit how many groups are returned each time you use the <code>ListAssociatedGroups</code> operation. If you omit this parameter, the default of 20 is used.',
    )
    NextToken: Optional[constr(pattern=r'^.+$', min_length=1, max_length=512)] = Field(
        None,
        description='A token that indicates that there is more data available. You can use this token in a subsequent operation to retrieve the next set of results.',
    )


class RuntimeVersionsPostRequest(BaseModel):
    MaxResults: Optional[conint(ge=1, le=100)] = Field(
        None,
        description='Specify this parameter to limit how many runs are returned each time you use the <code>DescribeRuntimeVersions</code> operation. If you omit this parameter, the default of 100 is used.',
    )
    NextToken: Optional[constr(min_length=4, max_length=252)] = Field(
        None,
        description='A token that indicates that there is more data available. You can use this token in a subsequent <code>DescribeRuntimeVersions</code> operation to retrieve the next set of results.',
    )


class TagsResourceArnPostRequest(BaseModel):
    Tags: Dict[str, TagValue] = Field(
        ..., description='The list of key-value pairs to associate with the resource.'
    )


class TagKeys(RootModel[List[TagKey]]):
    root: List[TagKey] = Field(..., max_length=50, min_length=1)


class ArtifactConfigInput(BaseModel):
    S3Encryption: Optional[S3EncryptionConfig] = None


class ArtifactConfigOutput(BaseModel):
    S3Encryption: Optional[S3EncryptionConfig] = None


class AssociateResourceRequest(BaseModel):
    ResourceArn: CanaryArn


class BaseScreenshot(BaseModel):
    IgnoreCoordinates: Optional[BaseScreenshotIgnoreCoordinates] = None
    ScreenshotName: String


class BaseScreenshots(RootModel[List[BaseScreenshot]]):
    root: List[BaseScreenshot]


class CanaryCodeInput(BaseModel):
    Handler: CodeHandler
    S3Bucket: Optional[String] = None
    S3Key: Optional[String] = None
    S3Version: Optional[String] = None
    ZipFile: Optional[Blob] = None


class CanaryCodeOutput(BaseModel):
    Handler: Optional[String] = None
    SourceLocationArn: Optional[String] = None


class CanaryRunConfigInput(BaseModel):
    ActiveTracing: Optional[NullableBoolean] = None
    EnvironmentVariables: Optional[EnvironmentVariablesMap] = None
    MemoryInMB: Optional[MaxSize3008] = None
    TimeoutInSeconds: Optional[MaxFifteenMinutesInSeconds] = None


class CanaryRunConfigOutput(BaseModel):
    ActiveTracing: Optional[NullableBoolean] = None
    MemoryInMB: Optional[MaxSize3008] = None
    TimeoutInSeconds: Optional[MaxFifteenMinutesInSeconds] = None


class CanaryRunStatus(BaseModel):
    State: Optional[CanaryRunState] = None
    StateReason: Optional[String] = None
    StateReasonCode: Optional[CanaryRunStateReasonCode] = None


class CanaryRunTimeline(BaseModel):
    Completed: Optional[Timestamp] = None
    Started: Optional[Timestamp] = None


class CanaryScheduleInput(BaseModel):
    DurationInSeconds: Optional[MaxOneYearInSeconds] = None
    Expression: String


class CanaryScheduleOutput(BaseModel):
    DurationInSeconds: Optional[MaxOneYearInSeconds] = None
    Expression: Optional[String] = None


class CanaryStatus(BaseModel):
    State: Optional[CanaryState] = None
    StateReason: Optional[String] = None
    StateReasonCode: Optional[CanaryStateReasonCode] = None


class CanaryTimeline(BaseModel):
    Created: Optional[Timestamp] = None
    LastModified: Optional[Timestamp] = None
    LastStarted: Optional[Timestamp] = None
    LastStopped: Optional[Timestamp] = None


class DescribeCanariesLastRunRequest(BaseModel):
    MaxResults: Optional[MaxSize100] = None
    Names: Optional[DescribeCanariesLastRunNameFilter] = None
    NextToken: Optional[Token] = None


class DescribeCanariesRequest(BaseModel):
    MaxResults: Optional[MaxCanaryResults] = None
    Names: Optional[DescribeCanariesNameFilter] = None
    NextToken: Optional[Token] = None


class DescribeRuntimeVersionsRequest(BaseModel):
    MaxResults: Optional[MaxSize100] = None
    NextToken: Optional[Token] = None


class GetCanaryRunsRequest(BaseModel):
    MaxResults: Optional[MaxSize100] = None
    NextToken: Optional[Token] = None


class GroupSummary(BaseModel):
    Arn: Optional[GroupArn] = None
    Id: Optional[String] = None
    Name: Optional[GroupName] = None


class GroupSummaryList(RootModel[List[GroupSummary]]):
    root: List[GroupSummary]


class ListAssociatedGroupsRequest(BaseModel):
    MaxResults: Optional[MaxGroupResults] = None
    NextToken: Optional[PaginationToken] = None


class ListAssociatedGroupsResponse(BaseModel):
    Groups: Optional[GroupSummaryList] = None
    NextToken: Optional[PaginationToken] = None


class ListGroupResourcesRequest(BaseModel):
    MaxResults: Optional[MaxGroupResults] = None
    NextToken: Optional[PaginationToken] = None


class ListGroupResourcesResponse(BaseModel):
    NextToken: Optional[PaginationToken] = None
    Resources: Optional[StringList] = None


class ListGroupsRequest(BaseModel):
    MaxResults: Optional[MaxGroupResults] = None
    NextToken: Optional[PaginationToken] = None


class ListGroupsResponse(BaseModel):
    Groups: Optional[GroupSummaryList] = None
    NextToken: Optional[Token] = None


class RuntimeVersion(BaseModel):
    DeprecationDate: Optional[Timestamp] = None
    Description: Optional[String] = None
    ReleaseDate: Optional[Timestamp] = None
    VersionName: Optional[String] = None


class RuntimeVersionList(RootModel[List[RuntimeVersion]]):
    root: List[RuntimeVersion]


class TagMap(RootModel[Optional[Dict[str, TagValue]]]):
    root: Optional[Dict[str, TagValue]] = None


class TagResourceRequest(BaseModel):
    Tags: TagMap


class VisualReferenceInput(BaseModel):
    BaseCanaryRunId: String
    BaseScreenshots_1: Optional[BaseScreenshots] = Field(None, alias='BaseScreenshots')


class VisualReferenceOutput(BaseModel):
    BaseCanaryRunId: Optional[String] = None
    BaseScreenshots_1: Optional[BaseScreenshots] = Field(None, alias='BaseScreenshots')


class VpcConfigOutput(BaseModel):
    SecurityGroupIds_1: Optional[SecurityGroupIds] = Field(
        None, alias='SecurityGroupIds'
    )
    SubnetIds_1: Optional[SubnetIds] = Field(None, alias='SubnetIds')
    VpcId_1: Optional[VpcId] = Field(None, alias='VpcId')


class VisualReference(BaseModel):
    BaseCanaryRunId: Optional[String] = None
    BaseScreenshots_1: Optional[BaseScreenshots] = Field(None, alias='BaseScreenshots')


class CanaryNamePatchRequest(BaseModel):
    ArtifactConfig_1: Optional[ArtifactConfig] = Field(
        None,
        alias='ArtifactConfig',
        description='A structure that contains the configuration for canary artifacts, including the encryption-at-rest settings for artifacts that the canary uploads to Amazon S3.',
    )
    ArtifactS3Location: Optional[constr(min_length=1, max_length=1024)] = Field(
        None,
        description="The location in Amazon S3 where Synthetics stores artifacts from the test runs of this canary. Artifacts include the log file, screenshots, and HAR files. The name of the S3 bucket can't include a period (.).",
    )
    Code_1: Optional[Code] = Field(
        None,
        alias='Code',
        description='Use this structure to input your script code for the canary. This structure contains the Lambda handler with the location where the canary should start running the script. If the script is stored in an S3 bucket, the bucket name, key, and version are also included. If the script was passed into the canary directly, the script code is contained in the value of <code>Zipfile</code>. ',
    )
    ExecutionRoleArn: Optional[
        constr(
            pattern=r'arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+',
            min_length=1,
            max_length=2048,
        )
    ] = Field(
        None,
        description='<p>The ARN of the IAM role to be used to run the canary. This role must already exist, and must include <code>lambda.amazonaws.com</code> as a principal in the trust policy. The role must also have the following permissions:</p> <ul> <li> <p> <code>s3:PutObject</code> </p> </li> <li> <p> <code>s3:GetBucketLocation</code> </p> </li> <li> <p> <code>s3:ListAllMyBuckets</code> </p> </li> <li> <p> <code>cloudwatch:PutMetricData</code> </p> </li> <li> <p> <code>logs:CreateLogGroup</code> </p> </li> <li> <p> <code>logs:CreateLogStream</code> </p> </li> <li> <p> <code>logs:CreateLogStream</code> </p> </li> </ul>',
    )
    FailureRetentionPeriodInDays: Optional[conint(ge=1, le=1024)] = Field(
        None,
        description='The number of days to retain data about failed runs of this canary.',
    )
    RunConfig_1: Optional[RunConfig] = Field(
        None,
        alias='RunConfig',
        description='A structure that contains input information for a canary run.',
    )
    RuntimeVersion: Optional[constr(min_length=1, max_length=1024)] = Field(
        None,
        description='Specifies the runtime version to use for the canary. For a list of valid runtime versions and for more information about runtime versions, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html"> Canary Runtime Versions</a>.',
    )
    Schedule_1: Optional[Schedule] = Field(
        None,
        alias='Schedule',
        description='This structure specifies how often a canary is to make runs and the date and time when it should stop making runs.',
    )
    SuccessRetentionPeriodInDays: Optional[conint(ge=1, le=1024)] = Field(
        None,
        description='The number of days to retain data about successful runs of this canary.',
    )
    VisualReference_1: Optional[VisualReference] = Field(
        None,
        alias='VisualReference',
        description='<p>An object that specifies what screenshots to use as a baseline for visual monitoring by this canary. It can optionally also specify parts of the screenshots to ignore during the visual monitoring comparison.</p> <p>Visual monitoring is supported only on canaries running the <b>syn-puppeteer-node-3.2</b> runtime or later. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Library_SyntheticsLogger_VisualTesting.html"> Visual monitoring</a> and <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Blueprints_VisualTesting.html"> Visual monitoring blueprint</a> </p>',
    )
    VpcConfig_1: Optional[VpcConfig] = Field(
        None,
        alias='VpcConfig',
        description='If this canary is to test an endpoint in a VPC, this structure contains information about the subnets and security groups of the VPC endpoint. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html"> Running a Canary in a VPC</a>.',
    )


class Canary(BaseModel):
    ArtifactConfig: Optional[ArtifactConfigOutput] = None
    ArtifactS3Location: Optional[String] = None
    Code: Optional[CanaryCodeOutput] = None
    EngineArn: Optional[FunctionArn] = None
    ExecutionRoleArn: Optional[RoleArn] = None
    FailureRetentionPeriodInDays: Optional[MaxSize1024] = None
    Id: Optional[UUID] = None
    Name: Optional[CanaryName] = None
    RunConfig: Optional[CanaryRunConfigOutput] = None
    RuntimeVersion: Optional[String] = None
    Schedule: Optional[CanaryScheduleOutput] = None
    Status: Optional[CanaryStatus] = None
    SuccessRetentionPeriodInDays: Optional[MaxSize1024] = None
    Tags: Optional[TagMap] = None
    Timeline: Optional[CanaryTimeline] = None
    VisualReference: Optional[VisualReferenceOutput] = None
    VpcConfig: Optional[VpcConfigOutput] = None


class CanaryRun(BaseModel):
    ArtifactS3Location: Optional[String] = None
    Id: Optional[UUID] = None
    Name: Optional[CanaryName] = None
    Status: Optional[CanaryRunStatus] = None
    Timeline: Optional[CanaryRunTimeline] = None


class CanaryRuns(RootModel[List[CanaryRun]]):
    root: List[CanaryRun]


class CreateCanaryRequest(BaseModel):
    ArtifactConfig: Optional[ArtifactConfigInput] = None
    ArtifactS3Location: String
    Code: CanaryCodeInput
    ExecutionRoleArn: RoleArn
    FailureRetentionPeriodInDays: Optional[MaxSize1024] = None
    Name: CanaryName
    RunConfig: Optional[CanaryRunConfigInput] = None
    RuntimeVersion: String
    Schedule: CanaryScheduleInput
    SuccessRetentionPeriodInDays: Optional[MaxSize1024] = None
    Tags: Optional[TagMap] = None
    VpcConfig: Optional[VpcConfigInput] = None


class CreateCanaryResponse(BaseModel):
    Canary_1: Optional[Canary] = Field(None, alias='Canary')


class CreateGroupRequest(BaseModel):
    Name: GroupName
    Tags: Optional[TagMap] = None


class DescribeRuntimeVersionsResponse(BaseModel):
    NextToken: Optional[Token] = None
    RuntimeVersions: Optional[RuntimeVersionList] = None


class GetCanaryResponse(BaseModel):
    Canary_1: Optional[Canary] = Field(None, alias='Canary')


class GetCanaryRunsResponse(BaseModel):
    CanaryRuns_1: Optional[CanaryRuns] = Field(None, alias='CanaryRuns')
    NextToken: Optional[Token] = None


class Group(BaseModel):
    Arn: Optional[GroupArn] = None
    CreatedTime: Optional[Timestamp] = None
    Id: Optional[String] = None
    LastModifiedTime: Optional[Timestamp] = None
    Name: Optional[GroupName] = None
    Tags: Optional[TagMap] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagMap] = None


class UpdateCanaryRequest(BaseModel):
    ArtifactConfig: Optional[ArtifactConfigInput] = None
    ArtifactS3Location: Optional[String] = None
    Code: Optional[CanaryCodeInput] = None
    ExecutionRoleArn: Optional[RoleArn] = None
    FailureRetentionPeriodInDays: Optional[MaxSize1024] = None
    RunConfig: Optional[CanaryRunConfigInput] = None
    RuntimeVersion: Optional[String] = None
    Schedule: Optional[CanaryScheduleInput] = None
    SuccessRetentionPeriodInDays: Optional[MaxSize1024] = None
    VisualReference: Optional[VisualReferenceInput] = None
    VpcConfig: Optional[VpcConfigInput] = None


class Canaries(RootModel[List[Canary]]):
    root: List[Canary]


class CanaryLastRun(BaseModel):
    CanaryName_1: Optional[CanaryName] = Field(None, alias='CanaryName')
    LastRun: Optional[CanaryRun] = None


class CreateGroupResponse(BaseModel):
    Group_1: Optional[Group] = Field(None, alias='Group')


class DescribeCanariesResponse(BaseModel):
    Canaries_1: Optional[Canaries] = Field(None, alias='Canaries')
    NextToken: Optional[Token] = None


class GetGroupResponse(BaseModel):
    Group_1: Optional[Group] = Field(None, alias='Group')


class CanariesLastRun(RootModel[List[CanaryLastRun]]):
    root: List[CanaryLastRun]


class DescribeCanariesLastRunResponse(BaseModel):
    CanariesLastRun_1: Optional[CanariesLastRun] = Field(None, alias='CanariesLastRun')
    NextToken: Optional[Token] = None
